/* ooooooooooooo ooooo   ooooo oooooooooooo ooo        ooooo oooooooooooo 
   8'   888   `8 `888'   `888' `888'     `8 `88.       .888' `888'     `8 
        888       888     888   888          888b     d'888   888         
        888       888ooooo888   888oooo8     8 Y88. .P  888   888oooo8    
        888       888     888   888    "     8  `888'   888   888    "    
        888       888     888   888       o  8    Y     888   888       o 
       o888o     o888o   o888o o888ooooood8 o8o        o888o o888ooooood8  */

/* BASICS */
.CodeMirror {
  /* Set height, width, borders, and global font properties here */
  border: var(--border-size) solid var(--border-color);
  font-family: monospace;
  color: #88dcfe;
  direction: ltr;
}

/* PADDING */
.CodeMirror-lines {
  padding: 4px 0; /* Vertical padding around content */
}

.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
  padding: 0 4px; /* Horizontal padding of content */
}

.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  background-color: #ff0000; /* The little square between H and V scrollbars */
}

/* GUTTER */
.CodeMirror-gutters {
  background-color: #3b3b3b;
  white-space: nowrap;
}

.CodeMirror-linenumber {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  color: #bbbbbb;
  white-space: nowrap;
}

.CodeMirror-guttermarker,
.CodeMirror-guttermarker-subtle {
  color: #bbbbbb;
}

/* CURSOR */
.CodeMirror-cursor {
  border-left: 1px solid #ffffff;
  border-right: none;
  width: 0;
}

/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 1px solid #ff0000;
}

.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border: 0 !important;
  background: #ff0000;
}

.cm-fat-cursor div.CodeMirror-cursors {
  z-index: 1;
}

.cm-fat-cursor {
  caret-color: transparent;
}

.cm-tab {
  display: inline-block;
  text-decoration: inherit;
}

.CodeMirror-rulers {
  position: absolute;
  left: 0;
  right: 0;
  top: -50px;
  bottom: 0;
  overflow: hidden;
}

.CodeMirror-ruler {
  border-left: 1px solid #ff0000;
  top: 0;
  bottom: 0;
  position: absolute;
}

/* DEFAULT THEME */
.cm-s-default .cm-header {
  color: #0000ff;
}

.cm-s-default .cm-quote {
  color: #009900;
}

.cm-negative {
  color: #dd4444;
}

.cm-positive {
  color: #229922;
}

.cm-header,
.cm-strong {
  font-weight: bold;
}

.cm-em {
  font-style: italic;
}

.cm-link {
  text-decoration: underline;
}

.cm-strikethrough {
  text-decoration: line-through;
}

.cm-s-default .cm-keyword {
  color: #c792ea;
}

.cm-s-default .cm-atom {
  color: #f78c6c;
}

.cm-s-default .cm-number {
  color: #f78c6c;
}

.cm-s-default .cm-def {
  color: #f07178;
}

.cm-s-default .cm-variable,
.cm-s-default .cm-variable-2 {
  color: #bbbbbb;
}

.cm-s-default .cm-variable-3,
.cm-s-default .cm-type {
  color: #decb6b;
}

.cm-s-default .cm-comment {
  color: #737b96;
}

.cm-s-default .cm-string,
.cm-s-default .cm-string-2 {
  color: #c3e88d;
}

.cm-s-default .cm-meta {
  color: #ffcb6b;
}

.cm-s-default .cm-qualifier {
  color: #decb6b;
}

.cm-s-default .cm-builtin {
  color: #ffcb6b;
}

.cm-s-default .cm-bracket {
  color: #999977;
}

.cm-s-default .cm-tag {
  color: #ff5370;
}

.cm-s-default .cm-attribute {
  color: #c792ea;
}

.cm-s-default .cm-hr {
  color: #999999;
}

.cm-s-default .cm-link {
  color: #0000cc;
}

.cm-s-default .cm-error {
  color: #ffffff;
  background-color: #ff5370;
}

.cm-s-default .cm-operator {
  color: #c792ea;
}

.cm-s-default .cm-property {
  color: #82aaff;
}

.cm-invalidchar {
  color: #ff0000;
}

.CodeMirror-composing {
  border-bottom: 2px solid;
}

/* Default styles for common addons */
div.CodeMirror span.CodeMirror-matchingbracket {
  color: #00bb00;
}

div.CodeMirror span.CodeMirror-nonmatchingbracket {
  color: #aa2222;
}

.CodeMirror-matchingtag {
  background: #ff96004d;
}

.CodeMirror-activeline-background {
  background: #00000080;
}

/* STOP */

/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */
.CodeMirror {
  position: relative;
  overflow: hidden;
  background: #3b3b3b;
}

.CodeMirror-scroll {
  /* Things will break if this is overridden */
  overflow: scroll !important;

  /* 50px is the magic margin used to hide the element's real scrollbars */

  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -50px;
  margin-right: -50px;
  padding-bottom: 50px;
  height: 100%;
  outline: none; /* Prevent dragging from highlighting the element */
  position: relative;
  z-index: 0;
}

.CodeMirror-sizer {
  position: relative;
  border-right: 50px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none;
  outline: none;
}

.CodeMirror-vscrollbar {
  right: 0;
  top: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}

.CodeMirror-hscrollbar {
  bottom: 0;
  left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}

.CodeMirror-scrollbar-filler {
  right: 0;
  bottom: 0;
}

.CodeMirror-gutter-filler {
  left: 0;
  bottom: 0;
}

.CodeMirror-gutters {
  position: absolute;
  left: 0;
  top: 0;
  min-height: 100%;
  z-index: 3;
}

.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  display: inline-block;
  vertical-align: top;
  margin-bottom: -50px;
}

.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  background: none !important;
  border: none !important;
}

.CodeMirror-gutter-background {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 4;
}

.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4;
}

.CodeMirror-lines {
  cursor: text;
  min-height: 1px; /* prevents collapsing before first draw */
}

.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
  /* Reset some styles that the rest of the page might have set */
  border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible;
  -webkit-tap-highlight-color: transparent;
  font-variant-ligatures: contextual;
}

.CodeMirror-wrap pre.CodeMirror-line,
.CodeMirror-wrap pre.CodeMirror-line-like {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal;
}

.CodeMirror-linebackground {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 0;
}

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  padding: 0.1px; /* Force widget margins to stay inside of the container */
}

.CodeMirror-rtl pre {
  direction: rtl;
}

.CodeMirror-code {
  outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
  box-sizing: content-box;
}

.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}

.CodeMirror-cursor {
  position: absolute;
  pointer-events: none;
}

.CodeMirror-measure pre {
  position: static;
}

div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 3;
}

div.CodeMirror-dragcursors {
  visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible;
}

.CodeMirror-selected {
  background: #7a7a7a;
}

.CodeMirror-focused .CodeMirror-selected {
  background: #0064dd;
}

.CodeMirror-crosshair {
  cursor: crosshair;
}

.cm-searching {
  background-color: #ffffaa;
  background-color: #ffff0066;
}

/* Used to force a border model for a node */
.cm-force-border {
  padding-right: 0.1px;
}

@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden;
  }
}

/* See issue #2901 */
.cm-tab-wrap-hack::after {
  content: '';
}

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext {
  background: none;
}

/* ooooo   ooooo ooooo ooooo      ooo ooooooooooooo  .oooooo..o 
   `888'   `888' `888' `888b.     `8' 8'   888   `8 d8P'    `Y8 
    888     888   888   8 `88b.    8       888      Y88bo.      
    888ooooo888   888   8   `88b.  8       888       `"Y8888o.  
    888     888   888   8     `88b.8       888           `"Y88b 
    888     888   888   8       `888       888      oo     .d8P 
   o888o   o888o o888o o8o        `8      o888o     8""88888P'   */
.CodeMirror-hints {
  position: absolute;
  z-index: 10;
  overflow: hidden;
  list-style: none;
  margin: 0;
  padding: 0;
  box-shadow: 2px 3px 5px #00000033;
  border: var(--border-size) solid var(--border-color);
  background: #3b3b3b;
  font-size: 90%;
  font-family: monospace;
  max-height: 20em;
  overflow-y: auto;
  box-sizing: border-box;
}

.CodeMirror-hint {
  margin: 0;
  padding: 0 4px;
  white-space: pre;
  color: #bbbbbb;
  cursor: pointer;
}

li.CodeMirror-hint-active {
  background: #0064dd;
  color: #ffffff;
}
